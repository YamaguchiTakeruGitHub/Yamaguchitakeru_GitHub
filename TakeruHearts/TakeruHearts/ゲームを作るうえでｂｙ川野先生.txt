「ゲームアプリケーションはゲームデータ再生機」
→DDD（Data Driven Development）

ハードコーディングは柔軟性に欠ける。
ハードコーディングとは：データにするべきパラメータをC++のコードの中に
書いている。

ゲーム内の細かいパラメータを外部ファイルに逃がす←最初のステップ

この場合の外部データというのは
①データベース
②設定ファイル
③ゲーム用の各種データ（）
④セーブファイル
⑤スクリプトファイル

プログラミングソースコード（スクリプト）も普通に「データ」である。
という風に考えます。
スクリプトの中にゲームのパラメータを記述したり、スクリプトの中に
手順が書かれていたりする←実機の中の特定の処理をいつ呼び出すかが書かれた
「手順書」というデータです。

こういう理由から
①マップファイル
	ヘッダにマップ情報を書いておくのは望ましくない
②敵キャラのパラメータ等
③アニメーション情報

はデータであるため、外部情報に置いておくのが望ましい。
例えば2Dのマップファイルならplatinum等を使うのですが、これが3Dになると
どうしたもんか…？となります。

①3Dとはいえ、真上から見ると2Dであることに注目する。

こればぐかな？